--PARTIE 4 : Séquence
1. Créer une séquence seq1_eleve l’incrémentation est de 1 et la valeur de départ vaut 1

CREATE SEQUENCE seq1_eleve
INCREMENT BY 1
START WITH 1;

2. Créer une séquence seq2_eleve, incrémentant de 5 en 5, de valeur de départ 1000 et de plafond 10000

CREATE SEQUENCE seq2_eleve
INCREMENT BY 5
START WITH 1000
MAXVALUE 10000;

3. Ecrire la commande affichant la valeur courante ainsi que la prochaine valeur de la séquence seq1_eleve

SELECT seq1_eleve.CURRVAL AS valeur_courante, seq1_eleve.NEXTVAL AS prochaine_valeur
FROM DUAL;

4. Utiliser seq2_eleve pour insérer dix nouveaux enregistrements dans la table élève.

INSERT INTO eleve (e_id, e_nom, e_prenom)
VALUES (seq2_eleve.NEXTVAL, 'Nom1', 'Prénom1');

INSERT INTO eleve (e_id, e_nom, e_prenom)
VALUES (seq2_eleve.NEXTVAL, 'Nom2', 'Prénom2');

-- Répétez ces étapes pour insérer 10 enregistrements en utilisant la séquence seq2_eleve

5. Peut-on Modifier la valeur de départ de seq1_eleve à 20 ?
On ne peut pas modifier directement la valeur de départ d'une séquence après sa création. 
Pour changer la valeur de départ, vous devez recréer la séquence avec la nouvelle valeur de départ. 
Dans ce cas, nous devrons recréer seq1_eleve avec une valeur de départ de 20 :

DROP SEQUENCE seq1_eleve;

CREATE SEQUENCE seq1_eleve
INCREMENT BY 1
START WITH 20;

6. Modifier à 25000 le plafond de la séquence seq2_eleve
ALTER SEQUENCE seq2_eleve MAXVALUE 25000;


--PARTIE 5 : Synonyme 
1. Créer un synonyme syn_eleve sur la table client dans le schéma de Scott
CREATE SYNONYM syn_eleve FOR Scott.client;

2. Effectuer des opérations de sélection, de modification, de suppression et d’insertion de données à travers le synonyme 
syn_eleve. Vérifier à chaque fois la table ELEVE.
--a. Sélection à travers le synonyme :
SELECT * FROM syn_eleve;

--b. Modification à travers le synonyme (par exemple, en changeant un nom) :
UPDATE syn_eleve
SET nom = 'NouveauNom'
WHERE ... ; -- Votre condition de mise à jour

--c. Insertion à travers le synonyme :
INSERT INTO syn_eleve (col1, col2, col3)
VALUES (value1, value2, value3);

--d. Suppression à travers le synonyme :
DELETE FROM syn_eleve WHERE ... ; -- Votre condition de suppression


3. Supprimer le synonyme syn_eleve.
DROP SYNONYM syn_eleve;